import cProfile as cp

### 1) По длинам трех отрезков, введенных пользователем,
# определить возможность существования треугольника, составленного из этих отрезков.
# Если такой треугольник существует, то определить, является ли он разносторонним, равнобедренным или равносторонним.

a = int(input("1 сторона: "))
b = int(input("2 сторона: "))
c = int(input("3 сторона: "))

def triangle(a, b, c):
    if a + b <= c or a + c <= b or b + c <= a:
        print("Ошибка. Вы ввели неверные данные")
    elif a != b and a != c and b != c:
        print("Треугольник - разносторонний")
    elif a == b == c:
        print("Треугольник - равносторонний")
    else:
        print("Треугольник - равнобедренный")

cp.run('triangle(a, b, c)')

print("------------------------------------------------------------------")

### 2) Написать два алгоритма нахождения i-го по счёту простого числа.

### Без использования «Решета Эратосфена»;
n = int(input('Введите число: '))
def not_Resh(n):
    primes = []
    for i in range(2, 10000):
        for j in range(2, i):
            if i % j == 0:
                break
        else:
            primes.append(i)
    print(f'Без использования алгоритма "Решета Эратосфена" {primes[n - 1]}')


cp.run('not_Resh(n)')

print("------------------------------------------------------------------")

### Используя алгоритм «Решето Эратосфена»

def resh(n):
    primes = []
    nums = [i for i in range(2, 10000)]

    for i in nums:
        if i != 0:
            primes.append(i)
            for j in nums[i:]:
                if j % i == 0:
                    nums[j - 2] = 0
    print(f'По алгоритму "Решето Эратосфена" {primes[n - 1]}')


cp.run('resh(n)')

